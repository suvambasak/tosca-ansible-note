---
tosca_definitions_version: tosca_simple_yaml_1_3

description: Service Template under construction

imports:
  - relationshiptypes/token_transfer.yaml
  - nodetypes/swarm_leader/swarm_leader.yaml
  # - nodetypes/swarm_worker/swarm_worker.yaml

node_types:
  hello_type:
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - leader:
          capability: tosca.capabilities.Node
          relationship: fog.docker.swarm.relationships.TokenTransfer
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          token:
            {
              value: { get_attribute: [SELF, leader, worker_token] },
              type: string,
            }
        operations:
          create: playbooks/create.yaml
          delete: playbooks/delete.yaml

topology_template:
  node_templates:
    fog-node-1:
      type: tosca.nodes.Compute
      attributes:
        private_address: 172.17.0.3
        public_address: 172.17.0.3

    docker-swarm-leader:
      type: fog.docker.SwarmLeader
      requirements:
        - host: fog-node-1

    fog-node-2:
      type: tosca.nodes.Compute
      attributes:
        private_address: 172.17.0.4
        public_address: 172.17.0.4

    test-file-1:
      type: hello_type
      requirements:
        - host: fog-node-2
        - leader: docker-swarm-leader

    # fog-node-3:
    #   type: tosca.nodes.Compute
    #   attributes:
    #     private_address: 172.17.0.5
    #     public_address: 172.17.0.5

    # test-file-2:
    #   type: hello_type
    #   requirements:
    #     - host: fog-node-3
    #     - leader: docker-swarm-leader

    # docker-swarm-worker-1:
    #   type: fog.docker.SwarmWorker
    #   properties:
    #     worker_join_token:
    #       { get_attribute: [docker-swarm-leader, worker_token] }
    #     ip_addr: 172.17.0.4
    #     leader_ip_addrs_port:
    #       - "172.17.0.3:2377"
    #   requirements:
    #     - host: fog-node-2
    #     - dependency: docker-swarm-leader

  outputs:
    output_worker_token_attribute:
      value: { get_attribute: [docker-swarm-leader, worker_token] }
    output_manager_token_attribute:
      value: { get_attribute: [docker-swarm-leader, manager_token] }
